name: Build and Deploy

on:
  push:
    branches:
      - main

env:
  AWS_REGION: eu-north-1
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  ECR_REPOSITORY: myproject-ecr
  EC2_HOST: ${{ secrets.EC2_HOST }}
  EC2_USER: ubuntu
  EC2_KEY: ${{ secrets.EC2_KEY }}

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.set_tag.outputs.image_tag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set image tag
        id: set_tag
        run: echo "image_tag=${GITHUB_SHA::8}" >> $GITHUB_OUTPUT

      - name: Build Docker image
        run: |
          docker build -t $ECR_REPOSITORY:${{ steps.set_tag.outputs.image_tag }} .
          docker tag $ECR_REPOSITORY:${{ steps.set_tag.outputs.image_tag }} \
            $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:${{ steps.set_tag.outputs.image_tag }}

      - name: Push Docker image to ECR
        run: |
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:${{ steps.set_tag.outputs.image_tag }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy Docker container to EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_USER }}
          key: ${{ env.EC2_KEY }}
          script: |
            export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            export AWS_REGION=eu-north-1
            export AWS_ACCOUNT_ID=${{ secrets.AWS_ACCOUNT_ID }}
            export ECR_REPOSITORY=myproject-ecr

            IMAGE=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:${{ needs.build.outputs.image_tag }}
            echo "Deploying $IMAGE"

            aws ecr get-login-password --region $AWS_REGION \
              | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

            docker pull $IMAGE
            docker stop nginx || true
            docker rm nginx || true
            docker run -d --name nginx -p 80:80 $IMAGE
